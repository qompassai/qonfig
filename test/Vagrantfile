# frozen_string_literal: true

# /qompassai/qonfig/test/Vagrantfile
# Qompass AI Multi-Distro Research Vagrantfile
# Set VM_BOX environment variable to override the box:
#   VM_BOX=archlinux/archlinux vagrant up
#   VM_BOX=nixos/nixos-23.05 vagrant up
BOX = ENV.fetch('VM_BOX', 'debian/bookworm64')
Vagrant.configure(2) do |config|
  config.vm.box = BOX
  config.vm.synced_folder '..', '/qonfig', type: 'rsync', rsync__exclude: '.git/'
  config.vm.synced_folder '.', '/vagrant', disabled: true
  config.vm.synced_folder '~/dotfiles', '/home/vagrant/dotfiles', type: 'rsync', rsync__exclude: '.git/'

  # Distro detection and per-guest package installation
  config.vm.provision 'shell', inline: <<~INSTALL_PACKAGES
    set -eu
    echo "==> Detecting guest operating system..."
    if [ -f /etc/debian_version ]; then
      echo "Debian/Ubuntu detected"
      apt-get -y update
      apt-get install -y git make build-essential libssl-dev zlib1g-dev \
        libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm \
        libncurses5-dev python3 python3-pip
    elif [ -f /etc/arch-release ]; then
      echo "Arch Linux detected"
      pacman -Syu --noconfirm
      pacman -S --noconfirm git base-devel openssl zlib bzip2 readline sqlite wget curl llvm ncurses python python-pip
    elif [ -f /etc/nixos ]; then
      echo "NixOS detected"
      echo "NixOS is declarative; consider mounting your configuration.nix and using nixos-rebuild."
    else
      echo "Unknown distro; manual installation may be required."
    fi
  INSTALL_PACKAGES
  config.vm.provision 'shell', privileged: false, inline: <<~SETUP_PYENV
    if ! grep -q pyenv ~/.bashrc; then
      git clone https://github.com/yyuu/pyenv.git ~/.pyenv
      echo 'export PATH="$HOME/.pyenv/bin:$PATH"
      eval "$(pyenv init -)"' >> ~/.bashrc
    fi
  SETUP_PYENV
  config.vm.provision 'shell', privileged: false, inline: <<~DOTFILES
    cp -r /home/vagrant/dotfiles/. ~
    echo "Dotfiles synced to home directory."
  DOTFILES
  config.vm.provision 'shell', inline: <<~NIXOS_PROVISION, run: 'always'
    if [ -f /etc/nixos/configuration.nix ]; then
      echo "Applying research NixOS config..."
      cp /qonfig/nix/configuration.nix /etc/nixos/configuration.nix
      nixos-rebuild switch
    fi
  NIXOS_PROVISION
  config.vm.network 'forwarded_port', guest: 8888, host: 8888
  config.vm.network 'forwarded_port', guest: 2222, host: 2222, id: 'ssh'
  config.vm.provision 'shell', inline: <<~DETECT_OS
    echo "==> Provisioning complete on guest:"
    . /etc/os-release
    echo "  - OS: $NAME ($ID), Version: $VERSION"
    uname -a
  DETECT_OS
end
